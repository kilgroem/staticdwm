.TH STATICDWM 1 staticdwm\-VERSION
.SH NAME
staticdwm \- static/dynamic window manager
.SH SYNOPSIS
.B staticdwm
.RB [ \-v ]
.SH DESCRIPTION
staticdwm is a window manager for X and a fork of dwm. Windows are placed in frames whose size and position are defined at compile time. A different layout is available for each number of open frames. Each frame and window is tagged.  Frames are filled with windows sharing the same tag, in a way analogous to tabs.
.P
A special frame displays all floating windows. Neither the floating frame or floating windows use tags, but windows may be tagged to stop floating. Floating window are moveable and resizeable. An alternate color scheme is used when selecting the floating frame.
.P
Other frames may be opened or closed. The size and position of each frame is determined by the number of frames open, i.e. there is a layout for one frame open, a layout for two frames open, etc. When a window is put into a frame it attempts to fill it. Closed frames are hidden, but retain their tags and other information, and will be filled with the same window, if it is available.
.P
Separate frames may be focused and selected. A window in the focused frame takes input as expected, but any command issued to the window manager, e.g. closing or switching tag, acts on the selected frame instead. You may also swap the focus and selected frames, or their contents including filled window and tag. The selected frame follows the focused frame, unless set differently by the user.
.P
The bar shows a list of tags, a list of frames, a window title, and a user set status. The tag list consists of list of numbers indicating the number of windows marked with that tag. The tags of the focused and selected frames are highlighted. A square box around the tag number indicates an urgent window on that tag.
.P
The frame lists begins with a number in square brackets to represent the floating frame and the number of floating windows. Following is a pair of square brackets for each frame up to the maximum defined number. A filled frame is labeled as [+], an empty frame as [-], and a closed frame as [ ]. The focus and selected frame markers are also highlighted. For example [10][+][-][+][ ] would indicate ten floating windows and three frames open of a possible four, with the first and third frames being filled with windows.
.P
The space between the frame markers and status is filled with the focused window's title. If the selected frame is different than the focused frame, part of the title of the window filling the selected frame is also displayed. Lastly a user defined status message is displayed.
.P
A special color border is drawn around focused windows, with an alternate color available for floating windows, if the border width is not set to 0. 
.SH OPTIONS
.TP
.B \-v
prints version information to standard output, then exits.
.SH USAGE
.SS Status bar
.TP
.B Defining the status message
The X root window name is read and displayed in the status text area. It can be set with the
.BR xsetroot (1)
command.
.SS Keyboard commands
.TP
.B Mod1\-Return
Start
.BR st(1).
.TP
.B Mod1\-p
Spawn
.BR dmenu(1)
for launching other programs.
.TP
.B Mod1\-,
Focus previous screen, if any.
.TP
.B Mod1\-.
Focus next screen, if any.
.TP
.B Mod1\-Shift\-,
Send focused window to previous screen, if any.
.TP
.B Mod1\-Shift\-.
Send focused window to next screen, if any.
.TP
.B Mod1\-b
Toggles bar on and off.
.TP
.B Mod1\-j
Fills the selected frame with the next available window. This ordering depends on when the window manager started managing the window. Selects and raises the next window for the floating frame.
.TP
.B Mod1\-k
Fills the frame with the previous available window. Selects and raises the previous window for the floating frame.
.TP
.B Mod1\-l
Selects and focuses the next frame, excluding the floating one.
.TP
.B Mod1\-h
Selects and focuses the previous frame, excluding the floating one.
.TP
.B Mod1\-o
Makes the selected frame the only open frame and focuses it by swapping frame contents and closing all but one frame.
.TP
.B Mod1\-r
Closes the selected frame, by swapping frame contents and closing a frame.
.TP
.B Mod1\-x
Swaps contents of focused and selected frames if different, or between focused and previously focused, or between first two frames, or the first and floating frames, preferring that order.
.TP
.B Mod1\-space
Swaps focus between focused and selected frames if different, or between focused and previously focused, or between first two frames, or the first and floating frames, preferring that order.
.TP
.B Mod1\-Shift\-c
Close window filling selected frame.
.TP
.B Mod1\-Shift\-space
Toggles floating of window filling selected frame. If a window was floating, it attempts to replace the window in the same numbered frame previously occupied, but only if the frame's tag is the same. Otherwise the window is hidden but available to fill a frame.
.TP
.B Mod1\-[1..4]
Set the selected frame's tag to that number if it is not the floating frame. If there is a window not already on screen sharing that tag it fills the frame.
.TP
.B Mod1\-Shift\-[1..4]
Move the window in the selected frame to that number. If there is another window with the selected frame's tag it fills the selected frame.
.TP
.B Mod1\-Control\-[1..4]
Sets the tags of both the selected frame and window in the selected frame to that number. The selected frame does not refill even if empty.
.TP
.B Mod1\-[asdf]
Selects and focuses the corresponding frame. Opens the frame if closed, as well as any smaller number frames.
.TP
.B Mod1\-Shift\-[asdf]
Selects, but does not focus, the corresponding frame. Window manager actions, such as filling a frame with a window or tagging, affect the selected window, while the focused one still accepts input.
.TP
.B Mod1\-Control\-[asdf]
Closes all frames greater than the one selected, adjusting the focus and selected frames as necessary.
.TP
.B Mod1\-Shift\-minus
Removes the window from the selected frame leaving it empty.
.TP
.B Mod1\-Shift\-q
Quit staticdwm.
.SS Mouse commands
.TP
.B Button1
Click on a tag label to mark the selected frame with that tag, setting the possible windows that frame might display and attempting to fill the frame with a window marked with that tag. Click on a frame label to select that frame, while opening it if it is closed. Click an empty frame to focus it. Click on the selected window title to fill the selected frame with the next window. Click on a window to focus it.
.TP
.B Button2
Click on a tag label to move the window in the selected frame to that tag.  Click on a frame label to close frames past that one and select it. Click on the selected window title to close it.
.TP
.B Button3
Click on a tag to move the window in the selected frame to that tag and then select that tag in the selected frame. Click on a frame label to select a frame but NOT focus it. Click on the selected window to swap focus between the previously selected frame, or between focused and selected frames if different.
.TP
.B Mod1\-Button1
Click and drag on a window to move it. This makes the window floating, if it was in a frame. Click on the window title to fill the selected frame with the previous available window.
.TP
.B Mod1\-Button2
Click on a window to toggle floating.
.TP
.B Mod1\-Button3
Click and drag on a window to resize it. This makes the window floating if it was in frame.
.SH CUSTOMIZATION
staticdwm is customized by creating a custom config.h and (re)compiling the source code. Pay special attention to commands to launch programs and exit staticdwm, and to setting the number, sizes, and positions of frames.
.SH SEE ALSO
.BR dmenu (1),
.BR st (1)
.SH BUGS
While adapting staticdwm from dwm, an attempt was made to update code for the
use of multiple monitors to the new system with frames, but it remains untested, and is not recommended.
.SH BUGS, INHERITED
Java applications which use the XToolkit/XAWT backend may draw grey windows only. The XToolkit/XAWT backend breaks ICCCM-compliance in recent JDK 1.5 and early JDK 1.6 versions, because it assumes a reparenting window manager. Possible workarounds are using JDK 1.4 (which doesn't contain the XToolkit/XAWT backend) or setting the environment variable
.BR AWT_TOOLKIT=MToolkit
(to use the older Motif backend instead) or running
.B xprop -root -f _NET_WM_NAME 32a -set _NET_WM_NAME LG3D
or
.B wmname LG3D
(to pretend that a non-reparenting window manager is running that the
XToolkit/XAWT backend can recognize) or when using OpenJDK setting the environment variable
.BR _JAVA_AWT_WM_NONREPARENTING=1 .
.P
GTK 2.10.9+ versions contain a broken
.BR Save\-As
file dialog implementation, which requests to reconfigure its window size in an endless loop. However, its window is still respondable during this state, so you can simply ignore the flicker until a new GTK version appears, which will fix this bug, approximately GTK 2.10.12+ versions.
